import { useState } from "react";
import { useNavigate } from "react-router-dom";
import "./HomePage.css";

type Level = {
  id: number;
  title: string;
  description: string;
  difficulty: "easy" | "medium" | "hard";
  completed: boolean;
  locked: boolean;
};

const HomePage = () => {
  const [showLevels, setShowLevels] = useState(false);
  const navigate = useNavigate();

  const levels: Level[] = [
    {
      id: 1,
      title: "–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏",
      description: "–û—Å–Ω–æ–≤—ã –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞",
      difficulty: "easy",
      completed: false,
      locked: false,
    },
    {
      id: 2,
      title: "–ü—Ä—ã–∂–∫–∏",
      description: "–ò–∑—É—á–∞–µ–º –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—é –∏ –∫–æ–ª–ª–∏–∑–∏–∏",
      difficulty: "easy",
      completed: false,
      locked: false,
    },
    {
      id: 3,
      title: "–ê–ª–≥–æ—Ä–∏—Ç–º—ã",
      description: "–ü—Ä–æ—Å—Ç—ã–µ –∞–ª–≥–æ—Ä–∏—Ç–º–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏",
      difficulty: "medium",
      completed: false,
      locked: false,
    },
    {
      id: 4,
      title: "–¶–∏–∫–ª—ã",
      description: "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è –¥–µ–π—Å—Ç–≤–∏–π",
      difficulty: "medium",
      completed: false,
      locked: true,
    },
    {
      id: 5,
      title: "–£—Å–ª–æ–≤–∏—è",
      description: "–ü—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π –≤ –∫–æ–¥–µ",
      difficulty: "medium",
      completed: false,
      locked: true,
    },
    {
      id: 6,
      title: "–§–∏–Ω–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å",
      description: "–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –∑–∞–¥–∞—á–∞",
      difficulty: "hard",
      completed: false,
      locked: true,
    },
  ];

  const handleStartClick = () => setShowLevels(true);
  const handleBackClick = () => setShowLevels(false);
  const handleLevelSelect = (levelId: number) => {
    const level = levels.find((l) => l.id === levelId);
    if (level && !level.locked) {
      navigate(`/level/${levelId}`);
    }
  };

  return (
    <div className="home-container">
      {!showLevels ? (
        <div className="preview-section">
          <h1>–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä—É–π –∏ –∏–≥—Ä–∞–π!</h1>
          <div className="game-preview">
            <div className="preview-content">
              <div className="preview-animation">
                <div className="character"></div>
                <div className="platform"></div>
                <div className="coin"></div>
              </div>
              <p>
                –†–µ—à–∞–π –∑–∞–¥–∞—á–∏, –ø–∏—à–∏ –∫–æ–¥ –∏ –ø—Ä–æ–∫–∞—á–∏–≤–∞–π –Ω–∞–≤—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è!
              </p>
            </div>
          </div>
          <button className="start-button" onClick={handleStartClick}>
            –ù–∞—á–∞—Ç—å –∏–≥—Ä—É
          </button>
        </div>
      ) : (
        <div className="levels-section">
          <div className="levels-header">
            <button className="back-button" onClick={handleBackClick}>
              ‚Üê –ù–∞–∑–∞–¥
            </button>
            <h2>–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å</h2>
            <div></div> {/* –ü—É—Å—Ç–æ–π div –¥–ª—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è */}
          </div>

          <div className="levels-list">
            {levels.map((level) => (
              <div
                key={level.id}
                className={`level-card ${level.completed ? "completed" : ""} ${
                  level.locked ? "locked" : ""
                }`}
                onClick={() => !level.locked && handleLevelSelect(level.id)}
              >
                <div className="level-header">
                  <h3>{level.title}</h3>
                  <span className={`difficulty ${level.difficulty}`}>
                    {level.difficulty === "easy"
                      ? "–õ–µ–≥–∫–æ"
                      : level.difficulty === "medium"
                      ? "–°—Ä–µ–¥–Ω–µ"
                      : "–°–ª–æ–∂–Ω–æ"}
                  </span>
                </div>
                <p>{level.description}</p>
                {level.locked ? (
                  <span className="status">üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω</span>
                ) : level.completed ? (
                  <span className="status">‚úì –ü—Ä–æ–π–¥–µ–Ω</span>
                ) : (
                  <span className="status">–ù–æ–≤—ã–π</span>
                )}
              </div>
            ))}
          </div>
        </div>
      )}
    </div>
  );
};

export default HomePage;
