import { useDispatch, useSelector } from "react-redux";
import { startLevel } from "../store/gameSlice";
import { Button } from "primereact/button";
import { Dialog } from "primereact/dialog";
import { useState } from "react";
import { InputTextarea } from "primereact/inputtextarea";
import { RootState } from "@/store/store";

type DialogType = {
  value: string;
  type: string;
};

const ButtonGroup = () => {
  const { code } = useSelector((state: RootState) => state.game);
  const dispatch = useDispatch();

  const [visibleHelp, setVisibleHelp] = useState(false);
  const [rows, setRows] = useState<DialogType[]>([
    { value: "", type: "request" },
  ]);

  const executeCode = () => {
    dispatch(startLevel());
  };

  const askOllama = async () => {
    console.log(rows);
    const prompt = rows[rows.length - 1]?.value;
    const res = await fetch("http://localhost:3001/api/ask-ollama", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ prompt, code }),
    });
    const data = await res.json();
    const row = [...rows];
    // row.push({ value: data.response || data.error, type: "response" });
    row.push({
      value:
        "üõ†Ô∏è –¶–∏–∫–ª —Å–ª–æ–≤–Ω–æ –∑–∞—Å—Ç—Ä—è–ª –Ω–∞ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ! üí° –ü–æ—Å–º–æ—Ç—Ä–∏ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ: –º–µ–Ω—è–µ—Ç—Å—è –ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è i –≤–Ω—É—Ç—Ä–∏ while? –ö–∞–∫ –¥–æ–ª–≥–æ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è —É—Å–ª–æ–≤–∏–µ i < 5?",
      type: "response",
    });
    row.push({ value: "", type: "request" });
    setRows(row);
  };

  return (
    <>
      <div className="flex gap-2">
        <Button onClick={executeCode} className="run-button">
          –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–¥
        </Button>
        <Button onClick={() => setVisibleHelp(true)}>–ü–æ–º–æ—â—å</Button>
      </div>
      <Dialog
        header="–ü–æ–º–æ—â—å"
        visible={visibleHelp}
        className="p-button-lg p-button-rounded"
        onHide={() => setVisibleHelp(false)}
        style={{ width: "70vw", height: "90vh" }}
        footer={
          <div className="flex w-full justify-content-center pt-4">
            <Button onClick={() => askOllama()}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</Button>
            <Button onClick={() => setVisibleHelp(false)}>–ó–∞–∫—Ä—ã—Ç—å</Button>
          </div>
        }
      >
        {rows.map((item, index: number) => (
          <div
            key={index}
            className="flex"
            style={{
              justifyContent: item.type === "request" ? "end" : "start",
            }}
          >
            <InputTextarea
              value={item.value}
              autoResize
              placeholder="–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏, –∑–∞–¥–∞–π—Ç–µ –∑–¥–µ—Å—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å"
              style={{ width: item.type === "request" ? "30%" : "80%" }}
              className="mb-3"
              onChange={(e) => {
                const row = [...rows];
                row[index].value = e.target.value;
                setRows(row);
              }}
            />
          </div>
        ))}
      </Dialog>
    </>
  );
};

export default ButtonGroup;
